#############
#
# See dcycleproject.org
#
# Authored by Albert Albala (@alberto56)
#
# This slideshow uses
#
#  * [Deck.js](http://imakewebthings.com/deck.js/) for the slideshow
#  * GitHub and GitHub Pages for hosting
#  * [Jekyll](http://jekyllrb.com) for converting yaml into HTML for deck.js
#
# See https://github.com/alberto56/presentation_docker_fr
# See http://alberto56.github.io/presentation_docker_fr/
# See http://www.drupalnorth.org/en/session/une-introduction-a-docker
#
#############

- id: a19
  title: Intro À Docker
  desc: |
    Albert Albala (@alberto56)

    Dcycle, Fondation Linux, TP1 (STM.info), CGI (Fondation 24h Tremblant), Koumbit

    Spécialités: Tests, Intégration continue, Deployment standardisé, Drupal

    Cette présentation est ouverte. Vous pouvez la [cloner ou la modifier sur github.com/alberto56/presentation_docker_fr](https://github.com/alberto56/presentation_docker_fr/edit/gh-pages/_data/slides.yml)

    Blog: dcycleproject.org

#############

- id: a32
  title: Introductions
  desc: |
    Pourquoi votre intérêt pour Docker?

     * Développeurs?
     * Gestionnaires de projet?
     * Sysadmins?
     * Environnements de dev rapides?
     * Déploiement facile en prod
     * Frustration avec Vagrant, machines virtuelles?
     * Frustration avec Puppet, Chef, Ansible?

#############

- id: a39
  title: Menu
  desc: |

     * Pourquoi le DevOps
     * Machines virtuelles vs. conteneurs
     * Idempotence vs. conteneurs non-persistents
     * Utilisation agressive de la mémoire cache
     * Les données
     * Demos
     * À considérer
     * Questions

#############

- id: a56
  title: Pourquoi le DevOps
  desc: |

    Au début... rien sous git:

    <img src="./images/stack_nothing.png" />

#############

- id: a64
  title: Pourquoi le DevOps
  desc: |

    Le code Drupal sous git:

    <img src="./images/stack_drupal.png" />

#############

- id: a7220150626144522
  title: Pourquoi le DevOps
  desc: |

    Features:

    <img src="./images/stack_features.png" />

#############

- id: a80
  title: Pourquoi le DevOps
  desc: |

    La promesse du DevOps:
    <img src="./images/stack_promise.png" />

#############

- id: a88
  title: Machines virtuelles vs. conteneurs
  desc: |

    Fonctionnement de machines virtuelles:

    <img src="./images/vms.png" />

    Source: docker.com

#############

- id: a98
  title: Machines virtuelles vs. conteneurs
  desc: |

    Conteneurs:

    <img src="./images/containers.png" />

    Source: docker.com

#############

- id: a105
  title: Idempotence vs. conteneurs non-persistents
  desc: |

    Les outils idempotents décrivent l'état désiré d'un système

      * Chef
      * Puppet
      * Ansible

    Lors d'une mise à jour, l'outil modifie le système cible.

#############

- id: a105
  title: Idempotence vs. conteneurs non-persistents
  desc: |

     * Docker crée le système cible une seule fois.
     * Le système n'est pas mis à jour, il est remplacé.
     * Les données stockées à l'extérieur du conteneur.

#############

- id: a129
  title: Utilisation agressive de la mémoire cache
  desc: |

     * Vagrant + VM: 10-30 secondes pour monter une VM.
     * Docker après le 1er build: < 1 seconde.

#############

- id: a138
  title: Que permet une bonne utilisation des ressources?
  desc: |

     * Le seuil psychologique des 10 secondes
     * Repartir à neuf pour chaque test
     * Système n'est jamais pollué
     * On peut construire le conteneur quand on en a besoin (comme Pantheon)

#############

- id: a138
  title: Les données dans une VM avec Puppet/Chef/Ansible
  desc: |

     * Les données peuvent résider dans la VM

#############

- id: a157
  title: Les données dans un conteneur
  desc: |

     * Les données ne résident pas dans la VM.

#############

- id: a165
  title: Mises à jour avec VM/Puppet/Chef/Ansible
  desc: |

     * Idempotence: requiert un outil qui modifie la VM.
     * La VM inclue les données

#############

- id: a174
  title: Mises à jour avec Docker
  desc: |

     * Aucune donnée sur le conteneur.
     * Un vieux conteneur est remplacé par un neuf.
     * drush updb -y

#############

- id: a184
  title: Démo #1
  desc: |

     * Développement d'un module Drupal

#############

- id: a192
  title: Démo #2
  desc: |

     * Docker avec autre chose que Drupal

#############

- id: a200
  title: Démo #3
  desc: |

     * Développement d'un site Drupal

#############

- id: a20820150626141906
  title: Démo #4
  desc: |

     * Déploiement en prod

#############

- id: a21620150626141858
  title: Démo #5
  desc: |

     * Mise à jour

#############

- id: a21420150626141901
  title: À considérer
  desc: |

     * Docker ne roule pas sur Mac ou Windows
     * ..._mais_ vous pouvez facilement rouler CoreOS sur une VM
     * CoreOS: OS minime avec Docker et Git, idéal pour rouler Docker
     * Docker roule sous root == problème potential de sécurité
     * ..._mais_ l'équipe de CoreOS développe Rocket, une alternative à Docker.

#############

- id: a22820150626141903
  title: En conclusion...
  desc: |
    Avant Docker...

#############

- id: a20150626142349
  title: En conclusion...
  desc: |
    Après Docker...

#############

- id: a22820150626141903
  title: Questions
  desc: |
    Albert Albala (@alberto56)

    Cette présentation est ouverte. Vous pouvez la [cloner ou la modifier sur github.com/alberto56/presentation_docker_fr](https://github.com/alberto56/presentation_docker_fr/edit/gh-pages/_data/slides.yml)


